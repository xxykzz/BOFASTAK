import { ParamsWithStore } from "../../../types";
import { Borsh } from "../../../utils";
import { PublicKey, TransactionCtorFields } from '@solana/web3.js';
import BN from 'bn.js';
import { Transaction } from '../../../Transaction';
export declare class RedeemPrintingV2BidArgs extends Borsh.Data<{
    editionOffset: BN;
    winIndex: BN;
}> {
    static readonly SCHEMA: any;
    instruction: number;
    editionOffset: BN;
    winIndex: BN;
}
declare type RedeemPrintingV2BidParams = {
    vault: PublicKey;
    auction: PublicKey;
    auctionManager: PublicKey;
    bidRedemption: PublicKey;
    bidMetadata: PublicKey;
    safetyDepositTokenStore: PublicKey;
    destination: PublicKey;
    safetyDeposit: PublicKey;
    bidder: PublicKey;
    safetyDepositConfig: PublicKey;
    auctionExtended: PublicKey;
    metadata: PublicKey;
    prizeTrackingTicket: PublicKey;
    newMetadata: PublicKey;
    newEdition: PublicKey;
    masterEdition: PublicKey;
    newMint: PublicKey;
    editionMark: PublicKey;
    winIndex: BN;
    editionOffset: BN;
};
export declare class RedeemPrintingV2Bid extends Transaction {
    constructor(options: TransactionCtorFields, params: ParamsWithStore<RedeemPrintingV2BidParams>);
}
export {};
