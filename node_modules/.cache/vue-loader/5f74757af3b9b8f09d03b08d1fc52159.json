{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Farmer.vue?vue&type=script&lang=ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Farmer.vue","mtime":1650820970834},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1650821117514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIG5leHRUaWNrLCBvbk1vdW50ZWQsIHJlZiwgd2F0Y2ggfSBmcm9tICd2dWUnOw0KaW1wb3J0IHVzZVdhbGxldCBmcm9tICdAL2NvbXBvc2FibGVzL3dhbGxldCc7DQppbXBvcnQgdXNlQ2x1c3RlciBmcm9tICdAL2NvbXBvc2FibGVzL2NsdXN0ZXInOw0KaW1wb3J0IHsgaW5pdEdlbUZhcm0gfSBmcm9tICdAL2NvbW1vbi9nZW0tZmFybSc7DQppbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnOw0KaW1wb3J0IENvbmZpZ1BhbmUgZnJvbSAnQC9jb21wb25lbnRzL0NvbmZpZ1BhbmUudnVlJzsNCmltcG9ydCBGYXJtZXJEaXNwbGF5IGZyb20gJ0AvY29tcG9uZW50cy9nZW0tZmFybS9GYXJtZXJEaXNwbGF5LnZ1ZSc7DQppbXBvcnQgVmF1bHQgZnJvbSAnQC9jb21wb25lbnRzL2dlbS1iYW5rL1ZhdWx0LnZ1ZSc7DQppbXBvcnQgeyBJTkZUIH0gZnJvbSAnQC9jb21tb24vd2ViMy9ORlRnZXQnOw0KaW1wb3J0IHsgZmluZEZhcm1lclBEQSwgc3RyaW5naWZ5UEtzQW5kQk5zIH0gZnJvbSAnQGdlbXdvcmtzL2dlbS1mYXJtLXRzJzsNCg0KZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsNCiAgY29tcG9uZW50czogeyBWYXVsdCwgRmFybWVyRGlzcGxheSwgQ29uZmlnUGFuZSB9LA0KICBzZXR1cCgpIHsNCiAgICBjb25zdCB7IHdhbGxldCwgZ2V0V2FsbGV0IH0gPSB1c2VXYWxsZXQoKTsNCiAgICBjb25zdCB7IGNsdXN0ZXIsIGdldENvbm5lY3Rpb24gfSA9IHVzZUNsdXN0ZXIoKTsNCg0KICAgIGxldCBnZjogYW55Ow0KICAgIHdhdGNoKFt3YWxsZXQsIGNsdXN0ZXJdLCBhc3luYyAoKSA9PiB7DQogICAgICBhd2FpdCBmcmVzaFN0YXJ0KCk7DQogICAgfSk7DQoNCiAgICAvL25lZWRlZCBpbiBjYXNlIHdlIHN3aXRjaCBpbiBmcm9tIGFub3RoZXIgd2luZG93DQogICAgb25Nb3VudGVkKGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGZyZXNoU3RhcnQoKTsNCiAgICB9KTsNCg0KICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBmYXJtZXIgZGV0YWlscw0KICAgIGNvbnN0IGZhcm0gPSByZWY8c3RyaW5nPigpOw0KICAgIGNvbnN0IGZhcm1BY2MgPSByZWY8YW55PigpOw0KDQogICAgY29uc3QgZmFybWVySWRlbnRpdHkgPSByZWY8c3RyaW5nPigpOw0KICAgIGNvbnN0IGZhcm1lckFjYyA9IHJlZjxhbnk+KCk7DQogICAgY29uc3QgZmFybWVyU3RhdGUgPSByZWY8c3RyaW5nPigpOw0KDQogICAgY29uc3QgYXZhaWxhYmxlQSA9IHJlZjxzdHJpbmc+KCk7DQogICAgY29uc3QgYXZhaWxhYmxlQiA9IHJlZjxzdHJpbmc+KCk7DQoNCiAgICAvL2F1dG8gbG9hZGluZyBmb3Igd2hlbiBmYXJtIGNoYW5nZXMNCiAgICB3YXRjaChmYXJtLCBhc3luYyAoKSA9PiB7DQogICAgICBhd2FpdCBmcmVzaFN0YXJ0KCk7DQogICAgfSk7DQoNCiAgICBjb25zdCB1cGRhdGVBdmFpbGFibGVSZXdhcmRzID0gYXN5bmMgKCkgPT4gew0KICAgICAgYXZhaWxhYmxlQS52YWx1ZSA9IGZhcm1lckFjYy52YWx1ZS5yZXdhcmRBLmFjY3J1ZWRSZXdhcmQNCiAgICAgICAgLnN1YihmYXJtZXJBY2MudmFsdWUucmV3YXJkQS5wYWlkT3V0UmV3YXJkKQ0KICAgICAgICAudG9TdHJpbmcoKTsNCiAgICAgIGF2YWlsYWJsZUIudmFsdWUgPSBmYXJtZXJBY2MudmFsdWUucmV3YXJkQi5hY2NydWVkUmV3YXJkDQogICAgICAgIC5zdWIoZmFybWVyQWNjLnZhbHVlLnJld2FyZEIucGFpZE91dFJld2FyZCkNCiAgICAgICAgLnRvU3RyaW5nKCk7DQogICAgfTsNCg0KICAgIGNvbnN0IGZldGNoRmFybiA9IGFzeW5jICgpID0+IHsNCiAgICAgIGZhcm1BY2MudmFsdWUgPSBhd2FpdCBnZi5mZXRjaEZhcm1BY2MobmV3IFB1YmxpY0tleShmYXJtLnZhbHVlISkpOw0KICAgICAgY29uc29sZS5sb2coDQogICAgICAgIGBmYXJtIGZvdW5kIGF0ICR7ZmFybS52YWx1ZX06YCwNCiAgICAgICAgc3RyaW5naWZ5UEtzQW5kQk5zKGZhcm1BY2MudmFsdWUpDQogICAgICApOw0KICAgIH07DQoNCiAgICBjb25zdCBmZXRjaEZhcm1lciA9IGFzeW5jICgpID0+IHsNCiAgICAgIGNvbnN0IFtmYXJtZXJQREFdID0gYXdhaXQgZmluZEZhcm1lclBEQSgNCiAgICAgICAgbmV3IFB1YmxpY0tleShmYXJtLnZhbHVlISksDQogICAgICAgIGdldFdhbGxldCgpIS5wdWJsaWNLZXkhDQogICAgICApOw0KICAgICAgZmFybWVySWRlbnRpdHkudmFsdWUgPSBnZXRXYWxsZXQoKSEucHVibGljS2V5Py50b0Jhc2U1OCgpOw0KICAgICAgZmFybWVyQWNjLnZhbHVlID0gYXdhaXQgZ2YuZmV0Y2hGYXJtZXJBY2MoZmFybWVyUERBKTsNCiAgICAgIGZhcm1lclN0YXRlLnZhbHVlID0gZ2YucGFyc2VGYXJtZXJTdGF0ZShmYXJtZXJBY2MudmFsdWUpOw0KICAgICAgYXdhaXQgdXBkYXRlQXZhaWxhYmxlUmV3YXJkcygpOw0KICAgICAgY29uc29sZS5sb2coDQogICAgICAgIGBmYXJtZXIgZm91bmQgYXQgJHtmYXJtZXJJZGVudGl0eS52YWx1ZX06YCwNCiAgICAgICAgc3RyaW5naWZ5UEtzQW5kQk5zKGZhcm1lckFjYy52YWx1ZSkNCiAgICAgICk7DQogICAgfTsNCg0KICAgIGNvbnN0IGZyZXNoU3RhcnQgPSBhc3luYyAoKSA9PiB7DQogICAgICBpZiAoZ2V0V2FsbGV0KCkgJiYgZ2V0Q29ubmVjdGlvbigpKSB7DQogICAgICAgIGdmID0gYXdhaXQgaW5pdEdlbUZhcm0oZ2V0Q29ubmVjdGlvbigpLCBnZXRXYWxsZXQoKSEpOw0KICAgICAgICBmYXJtZXJJZGVudGl0eS52YWx1ZSA9IGdldFdhbGxldCgpIS5wdWJsaWNLZXk/LnRvQmFzZTU4KCk7DQoNCiAgICAgICAgLy9yZXNldCBzdHVmZg0KICAgICAgICBmYXJtQWNjLnZhbHVlID0gdW5kZWZpbmVkOw0KICAgICAgICBmYXJtZXJBY2MudmFsdWUgPSB1bmRlZmluZWQ7DQogICAgICAgIGZhcm1lclN0YXRlLnZhbHVlID0gdW5kZWZpbmVkOw0KICAgICAgICBhdmFpbGFibGVBLnZhbHVlID0gdW5kZWZpbmVkOw0KICAgICAgICBhdmFpbGFibGVCLnZhbHVlID0gdW5kZWZpbmVkOw0KDQogICAgICAgIHRyeSB7DQogICAgICAgICAgYXdhaXQgZmV0Y2hGYXJuKCk7DQogICAgICAgICAgYXdhaXQgZmV0Y2hGYXJtZXIoKTsNCiAgICAgICAgfSBjYXRjaCAoZSkgew0KICAgICAgICAgIGNvbnNvbGUubG9nKGBmYXJtIHdpdGggUEsgJHtmYXJtLnZhbHVlfSBub3QgZm91bmQgOihgKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH07DQoNCiAgICBjb25zdCBpbml0RmFybWVyID0gYXN5bmMgKCkgPT4gew0KICAgICAgYXdhaXQgZ2YuaW5pdEZhcm1lcldhbGxldChuZXcgUHVibGljS2V5KGZhcm0udmFsdWUhKSk7DQogICAgICBhd2FpdCBmZXRjaEZhcm1lcigpOw0KICAgIH07DQoNCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gc3Rha2luZw0KICAgIGNvbnN0IGJlZ2luU3Rha2luZyA9IGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGdmLnN0YWtlV2FsbGV0KG5ldyBQdWJsaWNLZXkoZmFybS52YWx1ZSEpKTsNCiAgICAgIGF3YWl0IGZldGNoRmFybWVyKCk7DQogICAgICBzZWxlY3RlZE5GVHMudmFsdWUgPSBbXTsNCiAgICB9Ow0KDQogICAgY29uc3QgZW5kU3Rha2luZyA9IGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGdmLnVuc3Rha2VXYWxsZXQobmV3IFB1YmxpY0tleShmYXJtLnZhbHVlISkpOw0KICAgICAgYXdhaXQgZmV0Y2hGYXJtZXIoKTsNCiAgICAgIHNlbGVjdGVkTkZUcy52YWx1ZSA9IFtdOw0KICAgIH07DQoNCiAgICBjb25zdCBjbGFpbSA9IGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGdmLmNsYWltV2FsbGV0KA0KICAgICAgICBuZXcgUHVibGljS2V5KGZhcm0udmFsdWUhKSwNCiAgICAgICAgbmV3IFB1YmxpY0tleShmYXJtQWNjLnZhbHVlLnJld2FyZEEucmV3YXJkTWludCEpLA0KICAgICAgICBuZXcgUHVibGljS2V5KGZhcm1BY2MudmFsdWUucmV3YXJkQi5yZXdhcmRNaW50ISkNCiAgICAgICk7DQogICAgICBhd2FpdCBmZXRjaEZhcm1lcigpOw0KICAgIH07DQoNCiAgICBjb25zdCBoYW5kbGVSZWZyZXNoRmFybWVyID0gYXN5bmMgKCkgPT4gew0KICAgICAgYXdhaXQgZmV0Y2hGYXJtZXIoKTsNCiAgICB9Ow0KDQogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGFkZGluZyBleHRyYSBnZW0NCiAgICBjb25zdCBzZWxlY3RlZE5GVHMgPSByZWY8SU5GVFtdPihbXSk7DQoNCiAgICBjb25zdCBoYW5kbGVOZXdTZWxlY3RlZE5GVCA9IChuZXdTZWxlY3RlZE5GVHM6IElORlRbXSkgPT4gew0KICAgICAgY29uc29sZS5sb2coYHNlbGVjdGVkICR7bmV3U2VsZWN0ZWRORlRzLmxlbmd0aH0gTkZUc2ApOw0KICAgICAgc2VsZWN0ZWRORlRzLnZhbHVlID0gbmV3U2VsZWN0ZWRORlRzOw0KICAgIH07DQoNCiAgICBjb25zdCBhZGRTaW5nbGVHZW0gPSBhc3luYyAoDQogICAgICBnZW1NaW50OiBQdWJsaWNLZXksDQogICAgICBnZW1Tb3VyY2U6IFB1YmxpY0tleSwNCiAgICAgIGNyZWF0b3I6IFB1YmxpY0tleQ0KICAgICkgPT4gew0KICAgICAgYXdhaXQgZ2YuZmxhc2hEZXBvc2l0V2FsbGV0KA0KICAgICAgICBuZXcgUHVibGljS2V5KGZhcm0udmFsdWUhKSwNCiAgICAgICAgJzEnLA0KICAgICAgICBnZW1NaW50LA0KICAgICAgICBnZW1Tb3VyY2UsDQogICAgICAgIGNyZWF0b3INCiAgICAgICk7DQogICAgICBhd2FpdCBmZXRjaEZhcm1lcigpOw0KICAgIH07DQoNCiAgICBjb25zdCBhZGRHZW1zID0gYXN5bmMgKCkgPT4gew0KICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoDQogICAgICAgIHNlbGVjdGVkTkZUcy52YWx1ZS5tYXAoKG5mdCkgPT4gew0KICAgICAgICAgIGNvbnN0IGNyZWF0b3IgPSBuZXcgUHVibGljS2V5KA0KICAgICAgICAgICAgLy90b2RvIGN1cnJlbnRseSBzaW1wbHkgdGFraW5nIHRoZSAxc3QgY3JlYXRvcg0KICAgICAgICAgICAgKG5mdC5vbmNoYWluTWV0YWRhdGEgYXMgYW55KS5kYXRhLmNyZWF0b3JzWzBdLmFkZHJlc3MNCiAgICAgICAgICApOw0KICAgICAgICAgIGNvbnNvbGUubG9nKCdjcmVhdG9yIGlzJywgY3JlYXRvci50b0Jhc2U1OCgpKTsNCg0KICAgICAgICAgIGFkZFNpbmdsZUdlbShuZnQubWludCwgbmZ0LnB1YmtleSEsIGNyZWF0b3IpOw0KICAgICAgICB9KQ0KICAgICAgKTsNCiAgICAgIGNvbnNvbGUubG9nKA0KICAgICAgICBgYWRkZWQgYW5vdGhlciAke3NlbGVjdGVkTkZUcy52YWx1ZS5sZW5ndGh9IGdlbXMgaW50byBzdGFraW5nIHZhdWx0YA0KICAgICAgKTsNCiAgICB9Ow0KDQogICAgcmV0dXJuIHsNCiAgICAgIHdhbGxldCwNCiAgICAgIGZhcm0sDQogICAgICBmYXJtQWNjLA0KICAgICAgZmFybWVyOiBmYXJtZXJJZGVudGl0eSwNCiAgICAgIGZhcm1lckFjYywNCiAgICAgIGZhcm1lclN0YXRlLA0KICAgICAgYXZhaWxhYmxlQSwNCiAgICAgIGF2YWlsYWJsZUIsDQogICAgICBpbml0RmFybWVyLA0KICAgICAgYmVnaW5TdGFraW5nLA0KICAgICAgZW5kU3Rha2luZywNCiAgICAgIGNsYWltLA0KICAgICAgaGFuZGxlUmVmcmVzaEZhcm1lciwNCiAgICAgIHNlbGVjdGVkTkZUcywNCiAgICAgIGhhbmRsZU5ld1NlbGVjdGVkTkZULA0KICAgICAgYWRkR2VtcywNCiAgICB9Ow0KICB9LA0KfSk7DQo="},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Farmer.vue"],"names":[],"mappings":";AA4EA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnzE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE/C,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACnC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;;IAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACpB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;;IAEF,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEjC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IA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C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,C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AC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;;IAED,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;MACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,EAAE,CAAC,EAAE;MACH,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;UAC9B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACtD,CAAC;UACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;UAE7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,CAAC;MACH,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC;IACH,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC;EACH,CAAC;AACH,CAAC,CAAC","file":"C:/Users/ferna/Desktop/HiddenStaking/gem-farm/app/gem-farm/src/views/Farmer.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <ConfigPane />\r\n  <div v-if=\"!wallet\" class=\"text-center\">Pls connect (burner) wallet</div>\r\n  <div v-else>\r\n    <!--farm address-->\r\n    <div class=\"nes-container with-title mb-10\">\r\n      <p class=\"title\">Connect to a Farm</p>\r\n      <div class=\"nes-field mb-5\">\r\n        <label for=\"farm\">Farm address:</label>\r\n        <input id=\"farm\" class=\"nes-input\" v-model=\"farm\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"farmerAcc\">\r\n      <FarmerDisplay\r\n        :key=\"farmerAcc\"\r\n        :farm=\"farm\"\r\n        :farmAcc=\"farmAcc\"\r\n        :farmer=\"farmer\"\r\n        :farmerAcc=\"farmerAcc\"\r\n        class=\"mb-10\"\r\n        @refresh-farmer=\"handleRefreshFarmer\"\r\n      />\r\n      <Vault\r\n        :key=\"farmerAcc\"\r\n        class=\"mb-10\"\r\n        :vault=\"farmerAcc.vault.toBase58()\"\r\n        @selected-wallet-nft=\"handleNewSelectedNFT\"\r\n      >\r\n        <button\r\n          v-if=\"farmerState === 'staked' && selectedNFTs.length > 0\"\r\n          class=\"nes-btn is-primary mr-5\"\r\n          @click=\"addGems\"\r\n        >\r\n          Add Gems (resets staking)\r\n        </button>\r\n        <button\r\n          v-if=\"farmerState === 'unstaked'\"\r\n          class=\"nes-btn is-success mr-5\"\r\n          @click=\"beginStaking\"\r\n        >\r\n          Begin staking\r\n        </button>\r\n        <button\r\n          v-if=\"farmerState === 'staked'\"\r\n          class=\"nes-btn is-error mr-5\"\r\n          @click=\"endStaking\"\r\n        >\r\n          End staking\r\n        </button>\r\n        <button\r\n          v-if=\"farmerState === 'pendingCooldown'\"\r\n          class=\"nes-btn is-error mr-5\"\r\n          @click=\"endStaking\"\r\n        >\r\n          End cooldown\r\n        </button>\r\n        <button class=\"nes-btn is-warning\" @click=\"claim\">\r\n          Claim {{ availableA }} A / {{ availableB }} B\r\n        </button>\r\n      </Vault>\r\n    </div>\r\n    <div v-else>\r\n      <div class=\"w-full text-center mb-5\">\r\n        Farmer account not found :( Create a new one?\r\n      </div>\r\n      <div class=\"w-full text-center\">\r\n        <button class=\"nes-btn is-primary\" @click=\"initFarmer\">\r\n          New Farmer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, nextTick, onMounted, ref, watch } from 'vue';\r\nimport useWallet from '@/composables/wallet';\r\nimport useCluster from '@/composables/cluster';\r\nimport { initGemFarm } from '@/common/gem-farm';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport ConfigPane from '@/components/ConfigPane.vue';\r\nimport FarmerDisplay from '@/components/gem-farm/FarmerDisplay.vue';\r\nimport Vault from '@/components/gem-bank/Vault.vue';\r\nimport { INFT } from '@/common/web3/NFTget';\r\nimport { findFarmerPDA, stringifyPKsAndBNs } from '@gemworks/gem-farm-ts';\r\n\r\nexport default defineComponent({\r\n  components: { Vault, FarmerDisplay, ConfigPane },\r\n  setup() {\r\n    const { wallet, getWallet } = useWallet();\r\n    const { cluster, getConnection } = useCluster();\r\n\r\n    let gf: any;\r\n    watch([wallet, cluster], async () => {\r\n      await freshStart();\r\n    });\r\n\r\n    //needed in case we switch in from another window\r\n    onMounted(async () => {\r\n      await freshStart();\r\n    });\r\n\r\n    // --------------------------------------- farmer details\r\n    const farm = ref<string>();\r\n    const farmAcc = ref<any>();\r\n\r\n    const farmerIdentity = ref<string>();\r\n    const farmerAcc = ref<any>();\r\n    const farmerState = ref<string>();\r\n\r\n    const availableA = ref<string>();\r\n    const availableB = ref<string>();\r\n\r\n    //auto loading for when farm changes\r\n    watch(farm, async () => {\r\n      await freshStart();\r\n    });\r\n\r\n    const updateAvailableRewards = async () => {\r\n      availableA.value = farmerAcc.value.rewardA.accruedReward\r\n        .sub(farmerAcc.value.rewardA.paidOutReward)\r\n        .toString();\r\n      availableB.value = farmerAcc.value.rewardB.accruedReward\r\n        .sub(farmerAcc.value.rewardB.paidOutReward)\r\n        .toString();\r\n    };\r\n\r\n    const fetchFarn = async () => {\r\n      farmAcc.value = await gf.fetchFarmAcc(new PublicKey(farm.value!));\r\n      console.log(\r\n        `farm found at ${farm.value}:`,\r\n        stringifyPKsAndBNs(farmAcc.value)\r\n      );\r\n    };\r\n\r\n    const fetchFarmer = async () => {\r\n      const [farmerPDA] = await findFarmerPDA(\r\n        new PublicKey(farm.value!),\r\n        getWallet()!.publicKey!\r\n      );\r\n      farmerIdentity.value = getWallet()!.publicKey?.toBase58();\r\n      farmerAcc.value = await gf.fetchFarmerAcc(farmerPDA);\r\n      farmerState.value = gf.parseFarmerState(farmerAcc.value);\r\n      await updateAvailableRewards();\r\n      console.log(\r\n        `farmer found at ${farmerIdentity.value}:`,\r\n        stringifyPKsAndBNs(farmerAcc.value)\r\n      );\r\n    };\r\n\r\n    const freshStart = async () => {\r\n      if (getWallet() && getConnection()) {\r\n        gf = await initGemFarm(getConnection(), getWallet()!);\r\n        farmerIdentity.value = getWallet()!.publicKey?.toBase58();\r\n\r\n        //reset stuff\r\n        farmAcc.value = undefined;\r\n        farmerAcc.value = undefined;\r\n        farmerState.value = undefined;\r\n        availableA.value = undefined;\r\n        availableB.value = undefined;\r\n\r\n        try {\r\n          await fetchFarn();\r\n          await fetchFarmer();\r\n        } catch (e) {\r\n          console.log(`farm with PK ${farm.value} not found :(`);\r\n        }\r\n      }\r\n    };\r\n\r\n    const initFarmer = async () => {\r\n      await gf.initFarmerWallet(new PublicKey(farm.value!));\r\n      await fetchFarmer();\r\n    };\r\n\r\n    // --------------------------------------- staking\r\n    const beginStaking = async () => {\r\n      await gf.stakeWallet(new PublicKey(farm.value!));\r\n      await fetchFarmer();\r\n      selectedNFTs.value = [];\r\n    };\r\n\r\n    const endStaking = async () => {\r\n      await gf.unstakeWallet(new PublicKey(farm.value!));\r\n      await fetchFarmer();\r\n      selectedNFTs.value = [];\r\n    };\r\n\r\n    const claim = async () => {\r\n      await gf.claimWallet(\r\n        new PublicKey(farm.value!),\r\n        new PublicKey(farmAcc.value.rewardA.rewardMint!),\r\n        new PublicKey(farmAcc.value.rewardB.rewardMint!)\r\n      );\r\n      await fetchFarmer();\r\n    };\r\n\r\n    const handleRefreshFarmer = async () => {\r\n      await fetchFarmer();\r\n    };\r\n\r\n    // --------------------------------------- adding extra gem\r\n    const selectedNFTs = ref<INFT[]>([]);\r\n\r\n    const handleNewSelectedNFT = (newSelectedNFTs: INFT[]) => {\r\n      console.log(`selected ${newSelectedNFTs.length} NFTs`);\r\n      selectedNFTs.value = newSelectedNFTs;\r\n    };\r\n\r\n    const addSingleGem = async (\r\n      gemMint: PublicKey,\r\n      gemSource: PublicKey,\r\n      creator: PublicKey\r\n    ) => {\r\n      await gf.flashDepositWallet(\r\n        new PublicKey(farm.value!),\r\n        '1',\r\n        gemMint,\r\n        gemSource,\r\n        creator\r\n      );\r\n      await fetchFarmer();\r\n    };\r\n\r\n    const addGems = async () => {\r\n      await Promise.all(\r\n        selectedNFTs.value.map((nft) => {\r\n          const creator = new PublicKey(\r\n            //todo currently simply taking the 1st creator\r\n            (nft.onchainMetadata as any).data.creators[0].address\r\n          );\r\n          console.log('creator is', creator.toBase58());\r\n\r\n          addSingleGem(nft.mint, nft.pubkey!, creator);\r\n        })\r\n      );\r\n      console.log(\r\n        `added another ${selectedNFTs.value.length} gems into staking vault`\r\n      );\r\n    };\r\n\r\n    return {\r\n      wallet,\r\n      farm,\r\n      farmAcc,\r\n      farmer: farmerIdentity,\r\n      farmerAcc,\r\n      farmerState,\r\n      availableA,\r\n      availableB,\r\n      initFarmer,\r\n      beginStaking,\r\n      endStaking,\r\n      claim,\r\n      handleRefreshFarmer,\r\n      selectedNFTs,\r\n      handleNewSelectedNFT,\r\n      addGems,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}