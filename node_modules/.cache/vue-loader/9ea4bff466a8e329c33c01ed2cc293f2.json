{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Manager.vue?vue&type=script&lang=ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Manager.vue","mtime":1650820970834},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1650821117514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIG9uTW91bnRlZCwgcmVmLCB3YXRjaCB9IGZyb20gJ3Z1ZSc7DQppbXBvcnQgQ29uZmlnUGFuZSBmcm9tICdAL2NvbXBvbmVudHMvQ29uZmlnUGFuZS52dWUnOw0KaW1wb3J0IHVzZVdhbGxldCBmcm9tICdAL2NvbXBvc2FibGVzL3dhbGxldCc7DQppbXBvcnQgdXNlQ2x1c3RlciBmcm9tICdAL2NvbXBvc2FibGVzL2NsdXN0ZXInOw0KaW1wb3J0IFRlc3RNaW50IGZyb20gJ0AvY29tcG9uZW50cy9nZW0tZmFybS9UZXN0TWludC52dWUnOw0KaW1wb3J0IHsgaW5pdEdlbUZhcm0gfSBmcm9tICdAL2NvbW1vbi9nZW0tZmFybSc7DQppbXBvcnQgSW5pdEZhcm0gZnJvbSAnQC9jb21wb25lbnRzL2dlbS1mYXJtL0luaXRGYXJtLnZ1ZSc7DQppbXBvcnQgeyBQdWJsaWNLZXkgfSBmcm9tICdAc29sYW5hL3dlYjMuanMnOw0KaW1wb3J0IHsgc3RyaW5naWZ5UEtzQW5kQk5zIH0gZnJvbSAnQGdlbXdvcmtzL2dlbS1mYXJtLXRzJzsNCmltcG9ydCBBdXRob3JpemVGdW5kZXIgZnJvbSAnQC9jb21wb25lbnRzL2dlbS1mYXJtL0F1dGhvcml6ZUZ1bmRlci52dWUnOw0KaW1wb3J0IEZ1bmRDYW5jZWxMb2NrIGZyb20gJ0AvY29tcG9uZW50cy9nZW0tZmFybS9GdW5kQ2FuY2VsTG9jay52dWUnOw0KaW1wb3J0IFJlZnJlc2hGYXJtZXIgZnJvbSAnQC9jb21wb25lbnRzL2dlbS1mYXJtL1JlZnJlc2hGYXJtZXIudnVlJzsNCmltcG9ydCBUcmVhc3VyeVBheW91dCBmcm9tICdAL2NvbXBvbmVudHMvZ2VtLWZhcm0vVHJlYXN1cnlQYXlvdXQudnVlJzsNCmltcG9ydCBUaGVXaGl0ZWxpc3QgZnJvbSAnQC9jb21wb25lbnRzL2dlbS1mYXJtL0JhbmtXaGl0ZWxpc3QudnVlJzsNCmltcG9ydCBVcGRhdGVGYXJtIGZyb20gJ0AvY29tcG9uZW50cy9nZW0tZmFybS9VcGRhdGVGYXJtLnZ1ZSc7DQppbXBvcnQgRmFybURpc3BsYXkgZnJvbSAnQC9jb21wb25lbnRzL2dlbS1mYXJtL0Zhcm1EaXNwbGF5LnZ1ZSc7DQoNCmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7DQogIGNvbXBvbmVudHM6IHsNCiAgICBGYXJtRGlzcGxheSwNCiAgICBVcGRhdGVGYXJtLA0KICAgIFRoZVdoaXRlbGlzdCwNCiAgICBUcmVhc3VyeVBheW91dCwNCiAgICBSZWZyZXNoRmFybWVyLA0KICAgIEZ1bmRDYW5jZWxMb2NrLA0KICAgIEF1dGhvcml6ZUZ1bmRlciwNCiAgICBJbml0RmFybSwNCiAgICBUZXN0TWludCwNCiAgICBDb25maWdQYW5lLA0KICB9LA0KICBzZXR1cCgpIHsNCiAgICBjb25zdCB7IHdhbGxldCwgZ2V0V2FsbGV0IH0gPSB1c2VXYWxsZXQoKTsNCiAgICBjb25zdCB7IGNsdXN0ZXIsIGdldENvbm5lY3Rpb24gfSA9IHVzZUNsdXN0ZXIoKTsNCg0KICAgIGxldCBnZjogYW55Ow0KICAgIHdhdGNoKFt3YWxsZXQsIGNsdXN0ZXJdLCBhc3luYyAoKSA9PiB7DQogICAgICBnZiA9IGF3YWl0IGluaXRHZW1GYXJtKGdldENvbm5lY3Rpb24oKSwgZ2V0V2FsbGV0KCkhKTsNCiAgICAgIGF3YWl0IGZpbmRGYXJtc0J5TWFuYWdlcihnZXRXYWxsZXQoKSEucHVibGljS2V5ISk7DQogICAgfSk7DQoNCiAgICAvL25lZWRlZCBpbiBjYXNlIHdlIHN3aXRjaCBpbiBmcm9tIGFub3RoZXIgd2luZG93DQogICAgb25Nb3VudGVkKGFzeW5jICgpID0+IHsNCiAgICAgIGlmIChnZXRXYWxsZXQoKSAmJiBnZXRDb25uZWN0aW9uKCkpIHsNCiAgICAgICAgZ2YgPSBhd2FpdCBpbml0R2VtRmFybShnZXRDb25uZWN0aW9uKCksIGdldFdhbGxldCgpISk7DQogICAgICAgIGF3YWl0IGZpbmRGYXJtc0J5TWFuYWdlcihnZXRXYWxsZXQoKSEucHVibGljS2V5ISk7DQogICAgICB9DQogICAgfSk7DQoNCiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZmFybSBsb2NhdG9yDQogICAgY29uc3QgZm91bmRGYXJtcyA9IHJlZjxhbnlbXT4oW10pOw0KICAgIGNvbnN0IGZhcm0gPSByZWY8c3RyaW5nPigpOw0KICAgIGNvbnN0IGZhcm1BY2MgPSByZWY8YW55PigpOw0KICAgIGNvbnN0IGN1cnJlbnRGYXJtSW5kZXggPSByZWY8bnVtYmVyPigwKTsNCiAgICBjb25zdCBpc0xvYWRpbmcgPSByZWY8Ym9vbGVhbj4odHJ1ZSk7DQoNCiAgICAvL3doZW5ldmVyIHdlIGNoYW5nZSB0aGUgZmFybSwgd2UgdXBkYXRlIHRoZSBpbmRleC9hY2NvdW50DQogICAgd2F0Y2goZmFybSwgKG5ld0Zhcm06IGFueSkgPT4gew0KICAgICAgdXBkYXRlRmFybUJ5UGsobmV3RmFybSk7DQogICAgfSk7DQoNCiAgICBjb25zdCB1cGRhdGVGYXJtQnlQayA9IChuZXdGYXJtOiBzdHJpbmcpID0+IHsNCiAgICAgIGNvbnN0IGlkeCA9IGZvdW5kRmFybXMudmFsdWUuZmluZEluZGV4KA0KICAgICAgICAoZmYpID0+IGZmLnB1YmxpY0tleS50b0Jhc2U1OCgpID09PSBuZXdGYXJtDQogICAgICApOw0KICAgICAgY3VycmVudEZhcm1JbmRleC52YWx1ZSA9IGlkeDsNCiAgICAgIGZhcm1BY2MudmFsdWUgPSBmb3VuZEZhcm1zLnZhbHVlW2lkeF0uYWNjb3VudDsNCiAgICB9Ow0KDQogICAgY29uc3QgZmluZEZhcm1zQnlNYW5hZ2VyID0gYXN5bmMgKG1hbmFnZXI6IFB1YmxpY0tleSkgPT4gew0KICAgICAgZm91bmRGYXJtcy52YWx1ZSA9IGF3YWl0IGdmLmZldGNoQWxsRmFybVBEQXMobWFuYWdlcik7DQogICAgICBjb25zb2xlLmxvZygnRm91bmQgZmFybXM6Jywgc3RyaW5naWZ5UEtzQW5kQk5zKGZvdW5kRmFybXMudmFsdWUpKTsNCg0KICAgICAgaWYgKGZvdW5kRmFybXMudmFsdWUubGVuZ3RoKSB7DQogICAgICAgIGZhcm0udmFsdWUgPQ0KICAgICAgICAgIGZvdW5kRmFybXMudmFsdWVbY3VycmVudEZhcm1JbmRleC52YWx1ZV0ucHVibGljS2V5LnRvQmFzZTU4KCk7DQogICAgICAgIC8veWVzIHRoaXMgaXMgbmVlZGVkIGhlcmUsIGFzIHNvbWV0aW1lcyBmYXJtLnZhbHVlIHN0YXlzIHNhbWUsIGJ1dCB3ZSB3YW50IHRvIHJlcmVuZGVyIGFueXdheQ0KICAgICAgICB1cGRhdGVGYXJtQnlQayhmYXJtLnZhbHVlISk7DQogICAgICB9DQogICAgICBpc0xvYWRpbmcudmFsdWUgPSBmYWxzZTsNCiAgICB9Ow0KDQogICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHJlc3QNCiAgICBjb25zdCBzaG93TmV3RmFybSA9IHJlZjxib29sZWFuPihmYWxzZSk7DQoNCiAgICBjb25zdCBoYW5kbGVOZXdGYXJtID0gYXN5bmMgKG5ld0Zhcm06IHN0cmluZykgPT4gew0KICAgICAgc2hvd05ld0Zhcm0udmFsdWUgPSBmYWxzZTsNCiAgICAgIGF3YWl0IGZpbmRGYXJtc0J5TWFuYWdlcihnZXRXYWxsZXQoKSEucHVibGljS2V5ISk7DQogICAgICBmYXJtLnZhbHVlID0gbmV3RmFybTsNCiAgICB9Ow0KDQogICAgY29uc3QgaGFuZGxlVXBkYXRlRmFybSA9IGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGZpbmRGYXJtc0J5TWFuYWdlcihnZXRXYWxsZXQoKSEucHVibGljS2V5ISk7DQogICAgfTsNCg0KICAgIGNvbnN0IHJlZnJlc2hGYXJtcyA9IGFzeW5jICgpID0+IHsNCiAgICAgIGF3YWl0IGZpbmRGYXJtc0J5TWFuYWdlcihnZXRXYWxsZXQoKSEucHVibGljS2V5ISk7DQogICAgfTsNCg0KICAgIHJldHVybiB7DQogICAgICBpc0xvYWRpbmcsDQogICAgICB3YWxsZXQsDQogICAgICBmb3VuZEZhcm1zLA0KICAgICAgZmFybSwNCiAgICAgIGZhcm1BY2MsDQogICAgICBoYW5kbGVOZXdGYXJtLA0KICAgICAgaGFuZGxlVXBkYXRlRmFybSwNCiAgICAgIHNob3dOZXdGYXJtLA0KICAgICAgcmVmcmVzaEZhcm1zLA0KICAgIH07DQogIH0sDQp9KTsNCg=="},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\views\\Manager.vue"],"names":[],"mappings":";AAgpD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACld,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC;;IAEF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAC1C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5C,CAAC;MACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAEjE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B;MACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;;IAED,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEvC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACnC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MAC/B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC;;IAED,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;MACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;EACH,CAAC;AACH,CAAC,CAAC","file":"C:/Users/ferna/Desktop/HiddenStaking/gem-farm/app/gem-farm/src/views/Manager.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <ConfigPane />\r\n  <div v-if=\"!wallet\" class=\"text-center\">Pls connect (burner) wallet</div>\r\n  <div v-else>\r\n    <div class=\"flex mb-10 w-full justify-center\">\r\n      <button\r\n        class=\"nes-btn is-primary mr-5\"\r\n        @click=\"showNewFarm = !showNewFarm\"\r\n      >\r\n        New farm\r\n      </button>\r\n      <button class=\"nes-btn\" @click=\"refreshFarms\">Refetch farms</button>\r\n    </div>\r\n\r\n    <!--new farm-->\r\n    <div v-if=\"showNewFarm\">\r\n      <TestMint class=\"mb-10\" />\r\n      <InitFarm class=\"mb-10\" @new-farm=\"handleNewFarm\" />\r\n    </div>\r\n\r\n    <!--existing farms-->\r\n    <div v-if=\"foundFarms && foundFarms.length\">\r\n      <!--farm selector-->\r\n      <div class=\"nes-container with-title mb-10\">\r\n        <p class=\"title\">Farm Details</p>\r\n        <p class=\"mb-2\">Choose farm:</p>\r\n        <div class=\"nes-select mb-5\">\r\n          <select v-model=\"farm\">\r\n            <option v-for=\"f in foundFarms\" :key=\"f.publicKey.toBase58()\">\r\n              {{ f.publicKey.toBase58() }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <FarmDisplay :key=\"farmAcc\" :farmAcc=\"farmAcc\" />\r\n      </div>\r\n      <!--update farm-->\r\n      <UpdateFarm :farm=\"farm\" @update-farm=\"handleUpdateFarm\" class=\"mb-10\" />\r\n      <!--manage NFT types-->\r\n      <TheWhitelist\r\n        :key=\"farmAcc.bank\"\r\n        :farm=\"farm\"\r\n        :bank=\"farmAcc.bank.toBase58()\"\r\n        class=\"mb-10\"\r\n      />\r\n      <!--manage funders-->\r\n      <AuthorizeFunder :key=\"farm\" :farm=\"farm\" class=\"mb-10\" />\r\n      <!--manage funding-->\r\n      <FundCancelLock\r\n        :farm=\"farm\"\r\n        :farmAcc=\"farmAcc\"\r\n        class=\"mb-10\"\r\n        @update-farm=\"handleUpdateFarm\"\r\n      />\r\n      <!--refresh farmer-->\r\n      <RefreshFarmer :farm=\"farm\" class=\"mb-10\" />\r\n      <!--treasury payout-->\r\n      <TreasuryPayout :key=\"farmAcc\" :farm=\"farm\" class=\"mb-10\" />\r\n    </div>\r\n    <div v-else-if=\"isLoading\" class=\"text-center\">Loading...</div>\r\n    <div v-else class=\"text-center\">No farms found :( Start a new one?</div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, onMounted, ref, watch } from 'vue';\r\nimport ConfigPane from '@/components/ConfigPane.vue';\r\nimport useWallet from '@/composables/wallet';\r\nimport useCluster from '@/composables/cluster';\r\nimport TestMint from '@/components/gem-farm/TestMint.vue';\r\nimport { initGemFarm } from '@/common/gem-farm';\r\nimport InitFarm from '@/components/gem-farm/InitFarm.vue';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { stringifyPKsAndBNs } from '@gemworks/gem-farm-ts';\r\nimport AuthorizeFunder from '@/components/gem-farm/AuthorizeFunder.vue';\r\nimport FundCancelLock from '@/components/gem-farm/FundCancelLock.vue';\r\nimport RefreshFarmer from '@/components/gem-farm/RefreshFarmer.vue';\r\nimport TreasuryPayout from '@/components/gem-farm/TreasuryPayout.vue';\r\nimport TheWhitelist from '@/components/gem-farm/BankWhitelist.vue';\r\nimport UpdateFarm from '@/components/gem-farm/UpdateFarm.vue';\r\nimport FarmDisplay from '@/components/gem-farm/FarmDisplay.vue';\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FarmDisplay,\r\n    UpdateFarm,\r\n    TheWhitelist,\r\n    TreasuryPayout,\r\n    RefreshFarmer,\r\n    FundCancelLock,\r\n    AuthorizeFunder,\r\n    InitFarm,\r\n    TestMint,\r\n    ConfigPane,\r\n  },\r\n  setup() {\r\n    const { wallet, getWallet } = useWallet();\r\n    const { cluster, getConnection } = useCluster();\r\n\r\n    let gf: any;\r\n    watch([wallet, cluster], async () => {\r\n      gf = await initGemFarm(getConnection(), getWallet()!);\r\n      await findFarmsByManager(getWallet()!.publicKey!);\r\n    });\r\n\r\n    //needed in case we switch in from another window\r\n    onMounted(async () => {\r\n      if (getWallet() && getConnection()) {\r\n        gf = await initGemFarm(getConnection(), getWallet()!);\r\n        await findFarmsByManager(getWallet()!.publicKey!);\r\n      }\r\n    });\r\n\r\n    // --------------------------------------- farm locator\r\n    const foundFarms = ref<any[]>([]);\r\n    const farm = ref<string>();\r\n    const farmAcc = ref<any>();\r\n    const currentFarmIndex = ref<number>(0);\r\n    const isLoading = ref<boolean>(true);\r\n\r\n    //whenever we change the farm, we update the index/account\r\n    watch(farm, (newFarm: any) => {\r\n      updateFarmByPk(newFarm);\r\n    });\r\n\r\n    const updateFarmByPk = (newFarm: string) => {\r\n      const idx = foundFarms.value.findIndex(\r\n        (ff) => ff.publicKey.toBase58() === newFarm\r\n      );\r\n      currentFarmIndex.value = idx;\r\n      farmAcc.value = foundFarms.value[idx].account;\r\n    };\r\n\r\n    const findFarmsByManager = async (manager: PublicKey) => {\r\n      foundFarms.value = await gf.fetchAllFarmPDAs(manager);\r\n      console.log('Found farms:', stringifyPKsAndBNs(foundFarms.value));\r\n\r\n      if (foundFarms.value.length) {\r\n        farm.value =\r\n          foundFarms.value[currentFarmIndex.value].publicKey.toBase58();\r\n        //yes this is needed here, as sometimes farm.value stays same, but we want to rerender anyway\r\n        updateFarmByPk(farm.value!);\r\n      }\r\n      isLoading.value = false;\r\n    };\r\n\r\n    // --------------------------------------- rest\r\n    const showNewFarm = ref<boolean>(false);\r\n\r\n    const handleNewFarm = async (newFarm: string) => {\r\n      showNewFarm.value = false;\r\n      await findFarmsByManager(getWallet()!.publicKey!);\r\n      farm.value = newFarm;\r\n    };\r\n\r\n    const handleUpdateFarm = async () => {\r\n      await findFarmsByManager(getWallet()!.publicKey!);\r\n    };\r\n\r\n    const refreshFarms = async () => {\r\n      await findFarmsByManager(getWallet()!.publicKey!);\r\n    };\r\n\r\n    return {\r\n      isLoading,\r\n      wallet,\r\n      foundFarms,\r\n      farm,\r\n      farmAcc,\r\n      handleNewFarm,\r\n      handleUpdateFarm,\r\n      showNewFarm,\r\n      refreshFarms,\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n"]}]}