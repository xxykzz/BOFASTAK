{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\FundCancelLock.vue?vue&type=script&lang=ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\FundCancelLock.vue","mtime":1650820970816},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\babel.config.js","mtime":1650820970773},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1650821117514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\FundCancelLock.vue?vue&type=script&lang=ts"],"names":[],"mappings":";;AACA,SAAS,eAAT,EAA0B,SAA1B,EAAqC,GAArC,EAA0C,KAA1C,QAAuD,KAAvD;AACA,OAAO,SAAP,MAAsB,sBAAtB;AACA,OAAO,UAAP,MAAuB,uBAAvB;AACA,SAAS,WAAT,QAA4B,mBAA5B;AACA,SAAS,SAAT,QAA0B,iBAA1B;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE,MADD;AAEL,IAAA,OAAO,EAAE;AAFJ,GADsB;AAK7B,EAAA,KAAK,EAAE,CAAC,aAAD,CALsB;AAM7B,EAAA,KAN6B,iBAMvB,KANuB,EAMhB,GANgB,EAMb;AACd,qBAA8B,SAAS,EAAvC;AAAA,QAAQ,MAAR,cAAQ,MAAR;AAAA,QAAgB,SAAhB,cAAgB,SAAhB;;AACA,sBAAmC,UAAU,EAA7C;AAAA,QAAQ,OAAR,eAAQ,OAAR;AAAA,QAAiB,aAAjB,eAAiB,aAAjB;;AAEA,QAAI,EAAJ;AACA,IAAA,KAAK,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,uEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,oBACnB,SAAS,MAAM,aAAa,EADT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEV,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CAFD;;AAAA;AAErB,cAAA,EAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB,GAAL,CALc,CAWd;;AACA,IAAA,SAAS,uEAAC;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,SAAS,MAAM,aAAa,EADxB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEK,WAAW,CAAC,aAAa,EAAd,EAAkB,SAAS,EAA3B,CAFhB;;AAAA;AAEN,cAAA,EAFM;AAGN,cAAA,aAAa,CAAC,cAAc,CAAC,KAAhB,CAAb;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT,CAZc,CAmBd;;AACA,QAAM,cAAc,GAAG,GAAG,CAAS,SAAT,CAA1B;AACA,QAAM,gBAAgB,GAAG,GAAG,EAA5B,CArBc,CAuBd;;AACA,QAAM,QAAQ,GAAG,GAAG,EAApB;AACA,QAAM,WAAW,GAAG,GAAG,EAAvB;AACA,QAAM,YAAY,GAAG,GAAG,EAAxB;AACA,QAAM,gBAAgB,GAAG,GAAG,EAA5B;AACA,QAAM,YAAY,GAAG,GAAG,EAAxB;AACA,QAAM,gBAAgB,GAAG,GAAG,EAA5B;AACA,QAAM,YAAY,GAAG,GAAG,EAAxB;AACA,QAAM,gBAAgB,GAAG,GAAG,EAA5B;AAEA,QAAM,MAAM,GAAG,GAAG,EAAlB;AACA,QAAM,QAAQ,GAAG,GAAG,EAApB;;AAEA,QAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,cAAD,EAA2B;AAC/C,MAAA,gBAAgB,CAAC,KAAjB,GAAyB,EAAE,CAAC,eAAH,CACvB,KAAK,CAAC,OAAN,CAAe,cAAf,CADuB,CAAzB;AAGD,KAJD;;AAMA,IAAA,KAAK,CAAC,cAAD,EAAiB,UAAC,SAAD,EAAsB;AAC1C,MAAA,aAAa,CAAC,SAAD,CAAb;AACD,KAFI,CAAL;;AAIA,QAAM,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA,sBACb,gBAAgB,CAAC,KAAjB,KAA2B,UADd;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAET,EAAE,CAAC,wBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,IAAI,SAAJ,CAAc,KAAK,CAAC,OAAN,CAAe,cAAc,CAAC,KAA9B,EAAqC,UAAnD,CAFI,EAGJ,MAAM,CAAC,KAHH,EAIJ,QAAQ,CAAC,KAJL,CAFS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAST,EAAE,CAAC,qBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,IAAI,SAAJ,CAAc,KAAK,CAAC,OAAN,CAAe,cAAc,CAAC,KAA9B,EAAqC,UAAnD,CAFI,EAGJ,MAAM,CAAC,KAHH,EAIJ,QAAQ,CAAC,KAJL,EAKJ,QAAQ,CAAC,KALL,EAMJ,WAAW,CAAC,KANR,EAOJ,YAAY,CAAC,KAPT,EAQJ,gBAAgB,CAAC,KARb,EASJ,YAAY,CAAC,KATT,EAUJ,gBAAgB,CAAC,KAVb,EAWJ,YAAY,CAAC,KAXT,EAYJ,gBAAgB,CAAC,KAZb,CATS;;AAAA;AAwBjB,gBAAA,GAAG,CAAC,IAAJ,CAAS,aAAT;;AAxBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAV,UAAU;AAAA;AAAA;AAAA,OAAhB;;AA2BA,QAAM,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACb,EAAE,CAAC,kBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,IAAI,SAAJ,CAAc,KAAK,CAAC,OAAN,CAAe,cAAc,CAAC,KAA9B,EAAqC,UAAnD,CAFI,CADa;;AAAA;AAKnB,gBAAA,GAAG,CAAC,IAAJ,CAAS,aAAT;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZ,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAQA,QAAM,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACX,EAAE,CAAC,gBAAH,CACJ,IAAI,SAAJ,CAAc,KAAK,CAAC,IAApB,CADI,EAEJ,IAAI,SAAJ,CAAc,KAAK,CAAC,OAAN,CAAe,cAAc,CAAC,KAA9B,EAAqC,UAAnD,CAFI,CADW;;AAAA;AAKjB,gBAAA,GAAG,CAAC,IAAJ,CAAS,aAAT;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAV,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAQA,WAAO;AACL,MAAA,cAAc,EAAd,cADK;AAEL,MAAA,gBAAgB,EAAhB,gBAFK;AAGL,MAAA,QAAQ,EAAR,QAHK;AAIL,MAAA,WAAW,EAAX,WAJK;AAKL,MAAA,YAAY,EAAZ,YALK;AAML,MAAA,gBAAgB,EAAhB,gBANK;AAOL,MAAA,YAAY,EAAZ,YAPK;AAQL,MAAA,gBAAgB,EAAhB,gBARK;AASL,MAAA,YAAY,EAAZ,YATK;AAUL,MAAA,gBAAgB,EAAhB,gBAVK;AAWL,MAAA,MAAM,EAAN,MAXK;AAYL,MAAA,QAAQ,EAAR,QAZK;AAaL,MAAA,UAAU,EAAV,UAbK;AAcL,MAAA,YAAY,EAAZ,YAdK;AAeL,MAAA,UAAU,EAAV;AAfK,KAAP;AAiBD;AAhH4B,CAAD,CAA9B","sourcesContent":["\r\nimport { defineComponent, onMounted, ref, watch } from 'vue';\r\nimport useWallet from '@/composables/wallet';\r\nimport useCluster from '@/composables/cluster';\r\nimport { initGemFarm } from '@/common/gem-farm';\r\nimport { PublicKey } from '@solana/web3.js';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    farm: String,\r\n    farmAcc: Object,\r\n  },\r\n  emits: ['update-farm'],\r\n  setup(props, ctx) {\r\n    const { wallet, getWallet } = useWallet();\r\n    const { cluster, getConnection } = useCluster();\r\n\r\n    let gf: any;\r\n    watch([wallet, cluster], async () => {\r\n      if (getWallet() && getConnection()) {\r\n        gf = await initGemFarm(getConnection(), getWallet()!);\r\n      }\r\n    });\r\n\r\n    //need an onmounted hook because this component isn't yet mounted when wallet/cluster are set\r\n    onMounted(async () => {\r\n      if (getWallet() && getConnection()) {\r\n        gf = await initGemFarm(getConnection(), getWallet()!);\r\n        setRewardType(selectedReward.value);\r\n      }\r\n    });\r\n\r\n    // --------------------------------------- fund / cancel / lock\r\n    const selectedReward = ref<string>('rewardA');\r\n    const activeRewardType = ref<string>();\r\n\r\n    //fixed reward\r\n    const baseRate = ref<string>();\r\n    const denominator = ref<string>();\r\n    const t1RewardRate = ref<string>();\r\n    const t1RequiredTenure = ref<string>();\r\n    const t2RewardRate = ref<string>();\r\n    const t2RequiredTenure = ref<string>();\r\n    const t3RewardRate = ref<string>();\r\n    const t3RequiredTenure = ref<string>();\r\n\r\n    const amount = ref<string>();\r\n    const duration = ref<string>();\r\n\r\n    const setRewardType = (selectedReward: string) => {\r\n      activeRewardType.value = gf.parseRewardType(\r\n        props.farmAcc![selectedReward]\r\n      );\r\n    };\r\n\r\n    watch(selectedReward, (newReward: string) => {\r\n      setRewardType(newReward);\r\n    });\r\n\r\n    const fundReward = async () => {\r\n      if (activeRewardType.value === 'variable') {\r\n        await gf.fundVariableRewardWallet(\r\n          new PublicKey(props.farm!),\r\n          new PublicKey(props.farmAcc![selectedReward.value].rewardMint),\r\n          amount.value,\r\n          duration.value\r\n        );\r\n      } else {\r\n        await gf.fundFixedRewardWallet(\r\n          new PublicKey(props.farm!),\r\n          new PublicKey(props.farmAcc![selectedReward.value].rewardMint),\r\n          amount.value,\r\n          duration.value,\r\n          baseRate.value,\r\n          denominator.value,\r\n          t1RewardRate.value,\r\n          t1RequiredTenure.value,\r\n          t2RewardRate.value,\r\n          t2RequiredTenure.value,\r\n          t3RewardRate.value,\r\n          t3RequiredTenure.value\r\n        );\r\n      }\r\n      ctx.emit('update-farm');\r\n    };\r\n\r\n    const cancelReward = async () => {\r\n      await gf.cancelRewardWallet(\r\n        new PublicKey(props.farm!),\r\n        new PublicKey(props.farmAcc![selectedReward.value].rewardMint)\r\n      );\r\n      ctx.emit('update-farm');\r\n    };\r\n\r\n    const lockReward = async () => {\r\n      await gf.lockRewardWallet(\r\n        new PublicKey(props.farm!),\r\n        new PublicKey(props.farmAcc![selectedReward.value].rewardMint)\r\n      );\r\n      ctx.emit('update-farm');\r\n    };\r\n\r\n    return {\r\n      selectedReward,\r\n      activeRewardType,\r\n      baseRate,\r\n      denominator,\r\n      t1RewardRate,\r\n      t1RequiredTenure,\r\n      t2RewardRate,\r\n      t2RequiredTenure,\r\n      t3RewardRate,\r\n      t3RequiredTenure,\r\n      amount,\r\n      duration,\r\n      fundReward,\r\n      cancelReward,\r\n      lockReward,\r\n    };\r\n  },\r\n});\r\n"],"sourceRoot":""}]}