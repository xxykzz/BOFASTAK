{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\wallet.ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\wallet.ts","mtime":1650820970826},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\babel.config.js","mtime":1650820970773},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCB7IGNvbXB1dGVkLCByZWFkb25seSwgcmVmLCBzaGFsbG93UmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgZ2V0UGhhbnRvbVdhbGxldCwgZ2V0U29sZmxhcmVXYWxsZXQsIGdldFNvbGZsYXJlV2ViV2FsbGV0LCBnZXRTb2xsZXRFeHRlbnNpb25XYWxsZXQsIGdldFNvbGxldFdhbGxldCB9IGZyb20gJ0Bzb2xhbmEvd2FsbGV0LWFkYXB0ZXItd2FsbGV0cyc7CnZhciB3YWxsZXRDbGFzcyA9IHJlZihudWxsKTsKdmFyIHdhbGxldEFkYXB0ZXIgPSByZWYoc2hhbGxvd1JlZihudWxsKSk7CnZhciB3YWxsZXRNYXBwaW5nID0gewogIFBoYW50b206IGdldFBoYW50b21XYWxsZXQsCiAgU29sbGV0OiBnZXRTb2xsZXRXYWxsZXQsCiAgJ1NvbGxldCAoRXh0ZW5zaW9uKSc6IGdldFNvbGxldEV4dGVuc2lvbldhbGxldCwKICBTb2xmbGFyZTogZ2V0U29sZmxhcmVXYWxsZXQsCiAgJ1NvbGZsYXJlIChXZWIpJzogZ2V0U29sZmxhcmVXZWJXYWxsZXQKfTsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlV2FsbGV0KCkgewogIHZhciBpc0Nvbm5lY3RlZCA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiAhIXdhbGxldEFkYXB0ZXIudmFsdWU7CiAgfSk7CgogIHZhciBnZXRXYWxsZXQgPSBmdW5jdGlvbiBnZXRXYWxsZXQoKSB7CiAgICBpZiAod2FsbGV0QWRhcHRlci52YWx1ZSkgewogICAgICByZXR1cm4gd2FsbGV0QWRhcHRlci52YWx1ZTsKICAgIH0KCiAgICByZXR1cm4gbnVsbDsKICB9OwoKICB2YXIgc2V0V2FsbGV0ID0gZnVuY3Rpb24gc2V0V2FsbGV0KG5ld1dhbGxldCwgbmV0d29yaykgewogICAgY29uc29sZS5sb2coJ2F0dGVtcHRpbmcgdG8gc2V0IHdhbGxldCcsIG5ld1dhbGxldCwgbmV0d29yay5zdWJzdHIoMCwgMjApKTsKCiAgICBpZiAoIW5ld1dhbGxldCkgewogICAgICBjb25zb2xlLmxvZygncmVtb3ZpbmcgYWN0aXZlIHdhbGxldCcpOwogICAgICB3YWxsZXRDbGFzcy52YWx1ZSA9IG51bGw7CiAgICAgIHdhbGxldEFkYXB0ZXIudmFsdWUgPSBudWxsOyAvLyBkb24ndCB0aGluayBJIG5lZWQgc2hhbGxvd1JlZiBoZXJlCgogICAgICByZXR1cm47CiAgICB9CgogICAgdmFyIGdvdHRlbldhbGxldCA9IHdhbGxldE1hcHBpbmdbbmV3V2FsbGV0XSh7CiAgICAgIG5ldHdvcms6IG5ldHdvcmsKICAgIH0pOwogICAgdmFyIGNvbm5lY3RlZEFkYXB0ZXIgPSBnb3R0ZW5XYWxsZXQuYWRhcHRlcigpOwogICAgY29ubmVjdGVkQWRhcHRlci5jb25uZWN0KCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIC8vIG9ubHkgc2V0IHRoZSB0d28gaWYgdGhlIGNhbGwgc3VjY2VlZHMKICAgICAgd2FsbGV0Q2xhc3MudmFsdWUgPSBnb3R0ZW5XYWxsZXQ7CiAgICAgIHdhbGxldEFkYXB0ZXIudmFsdWUgPSBjb25uZWN0ZWRBZGFwdGVyOwogICAgICBjb25zb2xlLmxvZygnd2FsbGV0IHN1Y2Nlc3NmdWxseSBjb25uZWN0ZWQnLCBuZXdXYWxsZXQsIG5ldHdvcmsuc3Vic3RyKDAsIDIwKSk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvaCBubywgZmFpbGVkIHRvIGNvbm5lY3QgdG8gd2FsbGV0LCB0cnkgYWdhaW4nKTsKICAgICAgd2FsbGV0Q2xhc3MudmFsdWUgPSBudWxsOwogICAgICB3YWxsZXRBZGFwdGVyLnZhbHVlID0gbnVsbDsKICAgIH0pOwogIH07CgogIHZhciBnZXRXYWxsZXROYW1lID0gZnVuY3Rpb24gZ2V0V2FsbGV0TmFtZSgpIHsKICAgIGlmICh3YWxsZXRDbGFzcy52YWx1ZSkgewogICAgICByZXR1cm4gd2FsbGV0Q2xhc3MudmFsdWUubmFtZTsKICAgIH0KCiAgICByZXR1cm4gbnVsbDsKICB9OwoKICB2YXIgZ2V0V2FsbGV0QWRkcmVzcyA9IGZ1bmN0aW9uIGdldFdhbGxldEFkZHJlc3MoKSB7CiAgICBpZiAod2FsbGV0QWRhcHRlci52YWx1ZSkgewogICAgICByZXR1cm4gd2FsbGV0QWRhcHRlci52YWx1ZS5wdWJsaWNLZXk7CiAgICB9CgogICAgcmV0dXJuIG51bGw7CiAgfTsKCiAgcmV0dXJuIHsKICAgIHdhbGxldDogcmVhZG9ubHkod2FsbGV0QWRhcHRlciksCiAgICBpc0Nvbm5lY3RlZDogaXNDb25uZWN0ZWQsCiAgICBnZXRXYWxsZXQ6IGdldFdhbGxldCwKICAgIHNldFdhbGxldDogc2V0V2FsbGV0LAogICAgZ2V0V2FsbGV0TmFtZTogZ2V0V2FsbGV0TmFtZSwKICAgIGdldFdhbGxldEFkZHJlc3M6IGdldFdhbGxldEFkZHJlc3MKICB9Owp9"},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\wallet.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,EAAmB,QAAnB,EAA6B,GAA7B,EAAkC,UAAlC,QAAyD,KAAzD;AACA,SACE,gBADF,EAEE,iBAFF,EAGE,oBAHF,EAIE,wBAJF,EAKE,eALF,QAQO,gCARP;AAYA,IAAM,WAAW,GAAG,GAAG,CAAgB,IAAhB,CAAvB;AACA,IAAM,aAAa,GAAG,GAAG,CAAkC,UAAU,CAAC,IAAD,CAA5C,CAAzB;AAEA,IAAM,aAAa,GAAG;AACpB,EAAA,OAAO,EAAE,gBADW;AAEpB,EAAA,MAAM,EAAE,eAFY;AAGpB,wBAAsB,wBAHF;AAIpB,EAAA,QAAQ,EAAE,iBAJU;AAKpB,oBAAkB;AALE,CAAtB;AAQA,eAAc,SAAU,SAAV,GAAmB;AAC/B,MAAM,WAAW,GAAG,QAAQ,CAAC;AAAA,WAAM,CAAC,CAAC,aAAa,CAAC,KAAtB;AAAA,GAAD,CAA5B;;AAEA,MAAM,SAAS,GAAG,SAAZ,SAAY,GAAiC;AACjD,QAAI,aAAa,CAAC,KAAlB,EAAyB;AACvB,aAAO,aAAa,CAAC,KAArB;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,SAAD,EAA2B,OAA3B,EAA8C;AAC9D,IAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ,EAAwC,SAAxC,EAAmD,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,EAAlB,CAAnD;;AAEA,QAAI,CAAC,SAAL,EAAgB;AACd,MAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACA,MAAA,WAAW,CAAC,KAAZ,GAAoB,IAApB;AACA,MAAA,aAAa,CAAC,KAAd,GAAsB,IAAtB,CAHc,CAGc;;AAC5B;AACD;;AAED,QAAM,YAAY,GAAI,aAAqB,CAAC,SAAD,CAArB,CAAkC;AAAE,MAAA,OAAO,EAAP;AAAF,KAAlC,CAAtB;AACA,QAAM,gBAAgB,GAAG,YAAY,CAAC,OAAb,EAAzB;AACA,IAAA,gBAAgB,CACb,OADH,GAEG,IAFH,CAEQ,YAAK;AACT;AACA,MAAA,WAAW,CAAC,KAAZ,GAAoB,YAApB;AACA,MAAA,aAAa,CAAC,KAAd,GAAsB,gBAAtB;AACA,MAAA,OAAO,CAAC,GAAR,CACE,+BADF,EAEE,SAFF,EAGE,OAAO,CAAC,MAAR,CAAe,CAAf,EAAkB,EAAlB,CAHF;AAKD,KAXH,EAYG,KAZH,CAYS,YAAK;AACV,MAAA,OAAO,CAAC,GAAR,CAAY,+CAAZ;AACA,MAAA,WAAW,CAAC,KAAZ,GAAoB,IAApB;AACA,MAAA,aAAa,CAAC,KAAd,GAAsB,IAAtB;AACD,KAhBH;AAiBD,GA7BD;;AA+BA,MAAM,aAAa,GAAG,SAAhB,aAAgB,GAAwB;AAC5C,QAAI,WAAW,CAAC,KAAhB,EAAuB;AACrB,aAAO,WAAW,CAAC,KAAZ,CAAkB,IAAzB;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,MAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAuB;AAC9C,QAAI,aAAa,CAAC,KAAlB,EAAyB;AACvB,aAAO,aAAa,CAAC,KAAd,CAAoB,SAA3B;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,SAAO;AACL,IAAA,MAAM,EAAE,QAAQ,CAAC,aAAD,CADX;AAEL,IAAA,WAAW,EAAX,WAFK;AAGL,IAAA,SAAS,EAAT,SAHK;AAIL,IAAA,SAAS,EAAT,SAJK;AAKL,IAAA,aAAa,EAAb,aALK;AAML,IAAA,gBAAgB,EAAhB;AANK,GAAP;AAQD","sourcesContent":["import { computed, readonly, ref, shallowRef, Ref } from 'vue';\r\nimport {\r\n  getPhantomWallet,\r\n  getSolflareWallet,\r\n  getSolflareWebWallet,\r\n  getSolletExtensionWallet,\r\n  getSolletWallet,\r\n  Wallet,\r\n  WalletName,\r\n} from '@solana/wallet-adapter-wallets';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { SignerWalletAdapter } from '@solana/wallet-adapter-base';\r\n\r\nconst walletClass = ref<Wallet | null>(null);\r\nconst walletAdapter = ref<Ref<SignerWalletAdapter | null>>(shallowRef(null));\r\n\r\nconst walletMapping = {\r\n  Phantom: getPhantomWallet,\r\n  Sollet: getSolletWallet,\r\n  'Sollet (Extension)': getSolletExtensionWallet,\r\n  Solflare: getSolflareWallet,\r\n  'Solflare (Web)': getSolflareWebWallet,\r\n};\r\n\r\nexport default function useWallet() {\r\n  const isConnected = computed(() => !!walletAdapter.value);\r\n\r\n  const getWallet = (): SignerWalletAdapter | null => {\r\n    if (walletAdapter.value) {\r\n      return walletAdapter.value;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const setWallet = (newWallet: string | null, network: string) => {\r\n    console.log('attempting to set wallet', newWallet, network.substr(0, 20));\r\n\r\n    if (!newWallet) {\r\n      console.log('removing active wallet');\r\n      walletClass.value = null;\r\n      walletAdapter.value = null; // don't think I need shallowRef here\r\n      return;\r\n    }\r\n\r\n    const gottenWallet = (walletMapping as any)[newWallet!]({ network });\r\n    const connectedAdapter = gottenWallet.adapter();\r\n    connectedAdapter\r\n      .connect()\r\n      .then(() => {\r\n        // only set the two if the call succeeds\r\n        walletClass.value = gottenWallet;\r\n        walletAdapter.value = connectedAdapter;\r\n        console.log(\r\n          'wallet successfully connected',\r\n          newWallet,\r\n          network.substr(0, 20)\r\n        );\r\n      })\r\n      .catch(() => {\r\n        console.log('oh no, failed to connect to wallet, try again');\r\n        walletClass.value = null;\r\n        walletAdapter.value = null;\r\n      });\r\n  };\r\n\r\n  const getWalletName = (): WalletName | null => {\r\n    if (walletClass.value) {\r\n      return walletClass.value.name;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getWalletAddress = (): PublicKey | null => {\r\n    if (walletAdapter.value) {\r\n      return walletAdapter.value.publicKey;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return {\r\n    wallet: readonly(walletAdapter),\r\n    isConnected,\r\n    getWallet,\r\n    setWallet,\r\n    getWalletName,\r\n    getWalletAddress,\r\n  };\r\n}\r\n"],"sourceRoot":""}]}