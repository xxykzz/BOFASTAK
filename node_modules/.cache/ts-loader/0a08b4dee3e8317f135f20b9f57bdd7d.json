{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\TreasuryPayout.vue?vue&type=script&lang=ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\TreasuryPayout.vue","mtime":1650820970825},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\babel.config.js","mtime":1650820970773},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1650821117514}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkM6XFxVc2Vyc1xcZmVybmFcXERlc2t0b3BcXEhpZGRlblN0YWtpbmdcXGdlbS1mYXJtXFxhcHBcXGdlbS1mYXJtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxzbGljZWRUb0FycmF5LmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcZmVybmFcXERlc2t0b3BcXEhpZGRlblN0YWtpbmdcXGdlbS1mYXJtXFxhcHBcXGdlbS1mYXJtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxhc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBkZWZpbmVDb21wb25lbnQsIG9uTW91bnRlZCwgcmVmLCB3YXRjaCB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB1c2VXYWxsZXQgZnJvbSAnQC9jb21wb3NhYmxlcy93YWxsZXQnOwppbXBvcnQgdXNlQ2x1c3RlciBmcm9tICdAL2NvbXBvc2FibGVzL2NsdXN0ZXInOwppbXBvcnQgeyBpbml0R2VtRmFybSB9IGZyb20gJ0AvY29tbW9uL2dlbS1mYXJtJzsKaW1wb3J0IHsgUHVibGljS2V5IH0gZnJvbSAnQHNvbGFuYS93ZWIzLmpzJzsKaW1wb3J0IHsgZmluZEZhcm1UcmVhc3VyeVBEQSB9IGZyb20gJ0BnZW13b3Jrcy9nZW0tZmFybS10cyc7CmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7CiAgcHJvcHM6IHsKICAgIGZhcm06IFN0cmluZwogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzLCBjdHgpIHsKICAgIHZhciBfdXNlV2FsbGV0ID0gdXNlV2FsbGV0KCksCiAgICAgICAgd2FsbGV0ID0gX3VzZVdhbGxldC53YWxsZXQsCiAgICAgICAgZ2V0V2FsbGV0ID0gX3VzZVdhbGxldC5nZXRXYWxsZXQ7CgogICAgdmFyIF91c2VDbHVzdGVyID0gdXNlQ2x1c3RlcigpLAogICAgICAgIGNsdXN0ZXIgPSBfdXNlQ2x1c3Rlci5jbHVzdGVyLAogICAgICAgIGdldENvbm5lY3Rpb24gPSBfdXNlQ2x1c3Rlci5nZXRDb25uZWN0aW9uOwoKICAgIHZhciBnZjsKICAgIHdhdGNoKFt3YWxsZXQsIGNsdXN0ZXJdLCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGluaXRHZW1GYXJtKGdldENvbm5lY3Rpb24oKSwgZ2V0V2FsbGV0KCkpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGdmID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkpOyAvL25lZWQgYW4gb25tb3VudGVkIGhvb2sgYmVjYXVzZSB0aGlzIGNvbXBvbmVudCBpc24ndCB5ZXQgbW91bnRlZCB3aGVuIHdhbGxldC9jbHVzdGVyIGFyZSBzZXQKCiAgICBvbk1vdW50ZWQoIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghKGdldFdhbGxldCgpICYmIGdldENvbm5lY3Rpb24oKSkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBpbml0R2VtRmFybShnZXRDb25uZWN0aW9uKCksIGdldFdhbGxldCgpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBnZiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0VHJlc2F1cnlCYWxhbmNlKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkpOwogICAgd2F0Y2goZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gcHJvcHMuZmFybTsKICAgIH0sIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZ2V0VHJlc2F1cnlCYWxhbmNlKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkpOyAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gcGF5b3V0CgogICAgdmFyIGRlc3RpbmF0aW9uID0gcmVmKCk7CiAgICB2YXIgbGFtcG9ydHMgPSByZWYoKTsKICAgIHZhciBiYWxhbmNlID0gcmVmKCk7CgogICAgdmFyIHBheW91dEZyb21UcmVhc3VyeSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBnZi50cmVhc3VyeVBheW91dFdhbGxldChuZXcgUHVibGljS2V5KHByb3BzLmZhcm0pLCBuZXcgUHVibGljS2V5KGRlc3RpbmF0aW9uLnZhbHVlKSwgbGFtcG9ydHMudmFsdWUpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0VHJlc2F1cnlCYWxhbmNlKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiBwYXlvdXRGcm9tVHJlYXN1cnkoKSB7CiAgICAgICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgdmFyIGdldFRyZXNhdXJ5QmFsYW5jZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmNSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRmaW5kRmFybVRyZWFzdSwgX3lpZWxkJGZpbmRGYXJtVHJlYXN1MiwgdHJlYXN1cnk7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmluZEZhcm1UcmVhc3VyeVBEQShuZXcgUHVibGljS2V5KHByb3BzLmZhcm0pKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3lpZWxkJGZpbmRGYXJtVHJlYXN1ID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBfeWllbGQkZmluZEZhcm1UcmVhc3UyID0gX3NsaWNlZFRvQXJyYXkoX3lpZWxkJGZpbmRGYXJtVHJlYXN1LCAxKTsKICAgICAgICAgICAgICAgIHRyZWFzdXJ5ID0gX3lpZWxkJGZpbmRGYXJtVHJlYXN1MlswXTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0cmVhc3VyeSBmb3VuZDonLCB0cmVhc3VyeS50b0Jhc2U1OCgpKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBnZi5nZXRCYWxhbmNlKHRyZWFzdXJ5KTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgYmFsYW5jZS52YWx1ZSA9IF9jb250ZXh0NS5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUpOwogICAgICB9KSk7CgogICAgICByZXR1cm4gZnVuY3Rpb24gZ2V0VHJlc2F1cnlCYWxhbmNlKCkgewogICAgICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpOwoKICAgIHJldHVybiB7CiAgICAgIGJhbGFuY2U6IGJhbGFuY2UsCiAgICAgIGRlc3RpbmF0aW9uOiBkZXN0aW5hdGlvbiwKICAgICAgbGFtcG9ydHM6IGxhbXBvcnRzLAogICAgICBwYXlvdXRGcm9tVHJlYXN1cnk6IHBheW91dEZyb21UcmVhc3VyeQogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\components\\gem-farm\\TreasuryPayout.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { defineComponent, onMounted, ref, watch } from 'vue';\r\nimport useWallet from '@/composables/wallet';\r\nimport useCluster from '@/composables/cluster';\r\nimport { initGemFarm } from '@/common/gem-farm';\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { findFarmTreasuryPDA } from '@gemworks/gem-farm-ts';\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    farm: String,\r\n  },\r\n  setup(props, ctx) {\r\n    const { wallet, getWallet } = useWallet();\r\n    const { cluster, getConnection } = useCluster();\r\n\r\n    let gf: any;\r\n    watch([wallet, cluster], async () => {\r\n      gf = await initGemFarm(getConnection(), getWallet()!);\r\n    });\r\n\r\n    //need an onmounted hook because this component isn't yet mounted when wallet/cluster are set\r\n    onMounted(async () => {\r\n      if (getWallet() && getConnection()) {\r\n        gf = await initGemFarm(getConnection(), getWallet()!);\r\n        await getTresauryBalance();\r\n      }\r\n    });\r\n\r\n    watch(\r\n      () => props.farm,\r\n      async () => {\r\n        await getTresauryBalance();\r\n      }\r\n    );\r\n\r\n    // --------------------------------------- payout\r\n    const destination = ref<string>();\r\n    const lamports = ref<string>();\r\n    const balance = ref<string>();\r\n\r\n    const payoutFromTreasury = async () => {\r\n      await gf.treasuryPayoutWallet(\r\n        new PublicKey(props.farm!),\r\n        new PublicKey(destination.value!),\r\n        lamports.value!\r\n      );\r\n      await getTresauryBalance();\r\n    };\r\n\r\n    const getTresauryBalance = async () => {\r\n      const [treasury] = await findFarmTreasuryPDA(new PublicKey(props.farm!));\r\n      console.log('treasury found:', treasury.toBase58());\r\n      balance.value = await gf.getBalance(treasury);\r\n    };\r\n\r\n    return {\r\n      balance,\r\n      destination,\r\n      lamports,\r\n      payoutFromTreasury,\r\n    };\r\n  },\r\n});\r\n"],"sourceRoot":""}]}