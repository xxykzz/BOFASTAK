{"remainingRequest":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\cluster.ts","dependencies":[{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\cluster.ts","mtime":1650820970826},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\babel.config.js","mtime":1650820970773},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650821057627},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\babel-loader\\lib\\index.js","mtime":1650821057452},{"path":"C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\node_modules\\ts-loader\\index.js","mtime":1650821095383}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcZmVybmFcXERlc2t0b3BcXEhpZGRlblN0YWtpbmdcXGdlbS1mYXJtXFxhcHBcXGdlbS1mYXJtXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxhc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyByZWFkb25seSwgcmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgQ29ubmVjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7CmltcG9ydCB7IHRva2VuQXV0aEZldGNoTWlkZGxld2FyZSB9IGZyb20gJ0BzdHJhdGEtZm91bmRhdGlvbi93ZWIzLXRva2VuLWF1dGgnOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgdmFyIENsdXN0ZXI7CgooZnVuY3Rpb24gKENsdXN0ZXIpIHsKICBDbHVzdGVyWyJNYWlubmV0Il0gPSAibWFpbm5ldCI7CiAgQ2x1c3RlclsiRGV2bmV0Il0gPSAiZGV2bmV0IjsKICBDbHVzdGVyWyJUZXN0bmV0Il0gPSAidGVzdG5ldCI7CiAgQ2x1c3RlclsiTG9jYWxuZXQiXSA9ICJsb2NhbG5ldCI7Cn0pKENsdXN0ZXIgfHwgKENsdXN0ZXIgPSB7fSkpOwoKdmFyIGNsdXN0ZXJVUkxNYXBwaW5nID0gewogIG1haW5uZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfTUFJTk5FVF9VUkwgfHwgJ2h0dHBzOi8vYXBpLm1haW5uZXQtYmV0YS5zb2xhbmEuY29tJywKICBkZXZuZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfREVWTkVUX1VSTCB8fCAnaHR0cHM6Ly9hcGkuZGV2bmV0LnNvbGFuYS5jb20nLAogIHRlc3RuZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfVEVTVE5FVF9VUkwgfHwgJ2h0dHBzOi8vYXBpLnRlc3RuZXQuc29sYW5hLmNvbScsCiAgbG9jYWxuZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfTE9DQUxORVRfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0Ojg4OTknCn07CnZhciBjbHVzdGVyID0gcmVmKENsdXN0ZXIuTWFpbm5ldCk7CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZUNsdXN0ZXIoKSB7CiAgdmFyIGdldENsdXN0ZXJVUkwgPSBmdW5jdGlvbiBnZXRDbHVzdGVyVVJMKCkgewogICAgcmV0dXJuIGNsdXN0ZXJVUkxNYXBwaW5nW2NsdXN0ZXIudmFsdWVdOwogIH07CgogIHZhciBnZXRUb2tlbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9HRU5HT19BVVRIKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50LmRhdGEuYWNjZXNzX3Rva2VuKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIGdldFRva2VuKCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHZhciBnZXRDb25uZWN0aW9uID0gZnVuY3Rpb24gZ2V0Q29ubmVjdGlvbihjb21taXRtZW50KSB7CiAgICByZXR1cm4gbmV3IENvbm5lY3Rpb24oZ2V0Q2x1c3RlclVSTCgpLCB7CiAgICAgIGNvbW1pdG1lbnQ6IGNvbW1pdG1lbnQgIT09IG51bGwgJiYgY29tbWl0bWVudCAhPT0gdm9pZCAwID8gY29tbWl0bWVudCA6ICdwcm9jZXNzZWQnLAogICAgICBmZXRjaE1pZGRsZXdhcmU6IHRva2VuQXV0aEZldGNoTWlkZGxld2FyZSh7CiAgICAgICAgLy8gdG9rZW5FeHBpcnk6IDAsCiAgICAgICAgZ2V0VG9rZW46IGdldFRva2VuCiAgICAgIH0pCiAgICB9KTsKICB9OwoKICB2YXIgc2V0Q2x1c3RlciA9IGZ1bmN0aW9uIHNldENsdXN0ZXIobmV3Q2x1c3RlcikgewogICAgY2x1c3Rlci52YWx1ZSA9IG5ld0NsdXN0ZXI7IC8vIGNhcHBpbmcgYXQgMTAgY2hhcnMgZHVlIHRvIHNlY3VyaXR5IChub3QgdG8gZXhwb3NlIHRoZSB0b2tlbikKCiAgICBjb25zb2xlLmxvZygiQ2x1c3RlciB1cGRhdGVkLCBub3cgIi5jb25jYXQobmV3Q2x1c3RlciwgIiAoIikuY29uY2F0KGdldENsdXN0ZXJVUkwoKS5zdWJzdHIoMCwgMTApLCAiKSIpKTsKICB9OwoKICByZXR1cm4gewogICAgY2x1c3RlcjogcmVhZG9ubHkoY2x1c3RlciksCiAgICBnZXRDbHVzdGVyVVJMOiBnZXRDbHVzdGVyVVJMLAogICAgZ2V0Q29ubmVjdGlvbjogZ2V0Q29ubmVjdGlvbiwKICAgIHNldENsdXN0ZXI6IHNldENsdXN0ZXIKICB9Owp9"},{"version":3,"sources":["C:\\Users\\ferna\\Desktop\\HiddenStaking\\gem-farm\\app\\gem-farm\\src\\composables\\cluster.ts"],"names":[],"mappings":";;;AAAA,SAAS,QAAT,EAAmB,GAAnB,QAA8B,KAA9B;AACA,SAAqB,UAArB,QAAuC,iBAAvC;AACA,SAAS,wBAAT,QAAyC,oCAAzC;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAA,IAAY,OAAZ;;AAAA,CAAA,UAAY,OAAZ,EAAmB;AACjB,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,OAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACD,CALD,EAAY,OAAO,KAAP,OAAO,GAAA,EAAA,CAAnB;;AAOA,IAAM,iBAAiB,GAAG;AACxB,EAAA,OAAO,EACL,OAAO,CAAC,GAAR,CAAY,mBAAZ,IAAmC,qCAFb;AAGxB,EAAA,MAAM,EAAE,OAAO,CAAC,GAAR,CAAY,kBAAZ,IAAkC,+BAHlB;AAIxB,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,CAAY,mBAAZ,IAAmC,gCAJpB;AAKxB,EAAA,QAAQ,EAAE,OAAO,CAAC,GAAR,CAAY,oBAAZ,IAAoC;AALtB,CAA1B;AAQA,IAAM,OAAO,GAAG,GAAG,CAAU,OAAO,CAAC,OAAlB,CAAnB;AAEA,eAAc,SAAU,UAAV,GAAoB;AAChC,MAAM,aAAa,GAAG,SAAhB,aAAgB;AAAA,WAAc,iBAAiB,CAAC,OAAO,CAAC,KAAT,CAA/B;AAAA,GAAtB;;AAEA,MAAM,QAAQ;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAER,KAAK,CAAC,GAAN,CAAU,OAAO,CAAC,GAAR,CAAY,kBAAtB,CAFQ;;AAAA;AAAA,6DAEmC,IAFnC,CAEwC,YAFxC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAR,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAIA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,UAAD;AAAA,WACpB,IAAI,UAAJ,CAAe,aAAa,EAA5B,EAAgC;AAC9B,MAAA,UAAU,EAAE,UAAF,aAAE,UAAF,cAAE,UAAF,GAAgB,WADI;AAE9B,MAAA,eAAe,EAAE,wBAAwB,CAAC;AACxC;AACA,QAAA,QAAQ,EAAR;AAFwC,OAAD;AAFX,KAAhC,CADoB;AAAA,GAAtB;;AASA,MAAM,UAAU,GAAG,SAAb,UAAa,CAAC,UAAD,EAAwB;AACzC,IAAA,OAAO,CAAC,KAAR,GAAgB,UAAhB,CADyC,CAEzC;;AACA,IAAA,OAAO,CAAC,GAAR,gCAAoC,UAApC,eAAmD,aAAa,GAAG,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CAAnD;AACD,GAJD;;AAMA,SAAO;AACL,IAAA,OAAO,EAAE,QAAQ,CAAC,OAAD,CADZ;AAEL,IAAA,aAAa,EAAb,aAFK;AAGL,IAAA,aAAa,EAAb,aAHK;AAIL,IAAA,UAAU,EAAV;AAJK,GAAP;AAMD","sourcesContent":["import { readonly, ref } from 'vue';\r\nimport { Commitment, Connection } from '@solana/web3.js';\r\nimport { tokenAuthFetchMiddleware } from '@strata-foundation/web3-token-auth';\r\nimport axios from \"axios\";\r\n\r\nexport enum Cluster {\r\n  Mainnet = 'mainnet',\r\n  Devnet = 'devnet',\r\n  Testnet = 'testnet',\r\n  Localnet = 'localnet',\r\n}\r\n\r\nconst clusterURLMapping = {\r\n  mainnet:\r\n    process.env.VUE_APP_MAINNET_URL || 'https://api.mainnet-beta.solana.com',\r\n  devnet: process.env.VUE_APP_DEVNET_URL || 'https://api.devnet.solana.com',\r\n  testnet: process.env.VUE_APP_TESTNET_URL || 'https://api.testnet.solana.com',\r\n  localnet: process.env.VUE_APP_LOCALNET_URL || 'http://localhost:8899',\r\n};\r\n\r\nconst cluster = ref<Cluster>(Cluster.Mainnet);\r\n\r\nexport default function useCluster() {\r\n  const getClusterURL = (): string => clusterURLMapping[cluster.value];\r\n\r\n  const getToken = async (): Promise<string> =>\r\n    // @ts-ignore\r\n    (await axios.get(process.env.VUE_APP_GENGO_AUTH)).data.access_token;\r\n\r\n  const getConnection = (commitment?: Commitment): Connection =>\r\n    new Connection(getClusterURL(), {\r\n      commitment: commitment ?? 'processed',\r\n      fetchMiddleware: tokenAuthFetchMiddleware({\r\n        // tokenExpiry: 0,\r\n        getToken,\r\n      }),\r\n    });\r\n\r\n  const setCluster = (newCluster: Cluster) => {\r\n    cluster.value = newCluster;\r\n    // capping at 10 chars due to security (not to expose the token)\r\n    console.log(`Cluster updated, now ${newCluster} (${getClusterURL().substr(0, 10)})`);\r\n  };\r\n\r\n  return {\r\n    cluster: readonly(cluster),\r\n    getClusterURL,\r\n    getConnection,\r\n    setCluster,\r\n  };\r\n}\r\n"],"sourceRoot":""}]}